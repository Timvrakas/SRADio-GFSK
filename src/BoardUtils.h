

void highBoostPower(){
    Wire.beginTransmission(0x2E);
    Wire.write(byte(0x10));
    Wire.endTransmission();
}

/*************************************************************************************************************************************************************************************************/

void lowBoostPower(){
    Wire.beginTransmission(0x2E);
    Wire.write(byte(0x7F));
    Wire.endTransmission();
}

/*************************************************************************************************************************************************************************************************/

void SupercapChargerOff(){
  digitalWrite(BOOST_EN, LOW);
}

/*************************************************************************************************************************************************************************************************/

void SupercapChargerOn(){
  digitalWrite(BOOST_EN, HIGH);
}

/*************************************************************************************************************************************************************************************************/

void FiveVOff(){
  digitalWrite(EN_5V, LOW);
}

/*************************************************************************************************************************************************************************************************/

void FiveVOn(){
  digitalWrite(EN_5V, HIGH);
}

/*************************************************************************************************************************************************************************************************/

void DorjiOn(){
  pinMode(DORJI_GATE, OUTPUT);
  digitalWrite(DORJI_GATE, LOW);
}

/*************************************************************************************************************************************************************************************************/

void DorjiOff(){
  pinMode(DORJI_GATE, INPUT);
  //digitalWrite(DORJI_GATE, HIGH);
}

/*************************************************************************************************************************************************************************************************/

void DorjiSleep(){
  digitalWrite(DORJI_SLP, LOW);
}

/*************************************************************************************************************************************************************************************************/

void DorjiWake(){
  digitalWrite(DORJI_SLP, HIGH);
}

/*************************************************************************************************************************************************************************************************/

void DorjiLowPower(){
  digitalWrite(DORJI_PSEL, LOW);
}

/*************************************************************************************************************************************************************************************************/

void DorjiHighPower(){
  digitalWrite(DORJI_PSEL, HIGH);
}

/*************************************************************************************************************************************************************************************************/

void DorjiPTTOn(){
  digitalWrite(DORJI_PTT, LOW);
}

/*************************************************************************************************************************************************************************************************/

void DorjiPTTOff(){
  digitalWrite(DORJI_PTT, HIGH);
}

/*************************************************************************************************************************************************************************************************/

void GFSKOff(){
  digitalWrite(GFSK_GATE, HIGH);
}

/*************************************************************************************************************************************************************************************************/

void GFSKOn(){
  digitalWrite(GFSK_GATE, LOW);
}

/*************************************************************************************************************************************************************************************************/

void amBusy() {
  digitalWrite(PAYLOAD_1, LOW);
}

/*************************************************************************************************************************************************************************************************/

void amFree() {
  digitalWrite(PAYLOAD_1, HIGH);
}

/*************************************************************************************************************************************************************************************************/

double superCapVoltage(){
  return (double)analogRead(V_SPRCAP) * 1.2 * 5.99 / (double)pow(2, 12);
}
